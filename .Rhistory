knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(readr)
library(dplyr)
# Unduh sebagai teks
url <- "https://raw.githubusercontent.com/davidsyambudi/Latihan-Kuantitatif/6301b4aba6f6d62e0dea96ae6e0ecaa3089a3b79/9b_data_perbankan_syariah.csv"
raw <- read_lines(url)
# Buang baris pertama (yang sebenarnya bukan header, tapi data)
raw_clean <- raw[-1]
# Baca sebagai data numerik
data <- read_delim(
paste(raw_clean, collapse = "\n"),
delim = ",",
col_names = c("Periode", "ROA", "NPL", "SWBI", "IPI", "LDR")
)
# Konversi ke numerik (jaga-jaga)
data <- data %>%
mutate(
ROA = as.numeric(ROA),
NPL = as.numeric(NPL),
SWBI = as.numeric(SWBI),
IPI = as.numeric(IPI),
LDR = as.numeric(LDR)
)
# Hapus baris dengan NA
data <- na.omit(data)
# Cek struktur akhir
glimpse(data)
# Model regresi
model <- lm(LDR ~ ROA + NPL + SWBI + IPI, data = data)
# Unduh data sebagai teks mentah dari GitHub (raw link)
url <- "https://raw.githubusercontent.com/davidsyambudi/Latihan-Kuantitatif/6301b4aba6f6d62e0dea96ae6e0ecaa3089a3b79/9b_data_perbankan_syariah.csv"
raw <- read_lines(url)
# Gabungkan kembali baris-baris menjadi satu teks utuh
csv_text <- paste(raw, collapse = "\n")
# Baca data dengan pemisah titik koma dan desimal koma
data <- read_delim(
file = csv_text,
delim = ";",
locale = locale(decimal_mark = ","),
col_types = cols(
Periode = col_character(),
ROA = col_double(),
NPL = col_double(),
SWBI = col_double(),
IPI = col_double(),
LDR = col_double()
)
)
# Bersihkan data dari NA jika ada
data <- na.omit(data)
# Tinjau struktur data
glimpse(data)
library(PoEdata)
data(chap02_food)
data(andy)
data(food)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(PoEdata)
data
library(PoEdata)
# Load dataset
data(food)
# Describe structure
str(food)
# View selected rows
head(food, 5)
food[1:5, "food_exp"]
subset(food, income < 10)
summary(food)
summary(food$food_exp)
library(ggplot2)
ggplot(food, aes(x = income, y = food_exp)) +
geom_point() +
labs(title = "Food Expenditure Data",
x = "Income", y = "Food Expenditure") +
scale_y_continuous(breaks = seq(0, 600, 100)) +
scale_x_continuous(breaks = seq(0, 35, 5))
model1 <- lm(food_exp ~ income, data = food)
summary(model1)
food$yhat <- predict(model1)
food$ehat <- residuals(model1)
# Elasticity at means
mean_income <- mean(food$income)
mean_yhat <- mean(food$yhat)
elas_mean <- coef(model1)["income"] * mean_income / mean_yhat
# Elasticity per observation
food$elas <- coef(model1)["income"] * food$income / food$yhat
summary(food$elas)
ggplot(food, aes(x = income, y = food_exp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Fitted Regression Line",
x = "Income", y = "Food Expenditure") +
scale_y_continuous(breaks = seq(0, 600, 100)) +
scale_x_continuous(breaks = seq(0, 35, 5))
data(read)
br <- data
summary(br)
br$sqft2 <- br$sqft^2
model2 <- lm(price ~ sqft2, data = br)
data1(read)
br <- data
summary(br)
br$sqft2 <- br$sqft^2
model2 <- lm(price ~ sqft2, data = br)
data1(read)
br <- data
summary(br)
data(read)
br <- data
summary(br)
data(br)
br <- data
summary(br)
br$sqft2 <- br$sqft^2
model2 <- lm(price ~ sqft2, data = br)
View(br)
View(br)
View(br)
data(br)
data(br)
summary(br)
br$sqft2 <- br$sqft^2
model2 <- lm(price ~ sqft2, data = br)
br$priceq <- predict(model2)
ggplot(br, aes(x = sqft, y = price)) +
geom_point() +
geom_line(aes(y = priceq), color = "blue", linewidth = 1) +
labs(title = "Quadratic Fit", x = "Square Foot", y = "Price")
data(utown)
summary(utown)
ggplot(utown, aes(x = price)) +
geom_histogram(data = subset(utown, utown == 0), binwidth = 12, fill = "blue", alpha = 0.5) +
geom_histogram(data = subset(utown, utown == 1), binwidth = 12, fill = "green", alpha = 0.5) +
facet_wrap(~ utown, ncol = 1) +
labs(title = "House Prices by Neighborhood", x = "Price ($1000)")
# Regression
model4 <- lm(price ~ factor(utown), data = utown)
summary(model4)
# T-test
t.test(price ~ utown, data = utown)
